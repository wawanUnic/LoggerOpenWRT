import socket
import time
import random
import argparse

parser = argparse.ArgumentParser(description="–õ–æ–≥-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ç–µ—Å—Ç–æ–≤ log-receiver")
parser.add_argument("--ip", default="127.0.0.1", help="IP –ª–æ–≥-—Å–µ—Ä–≤–µ—Ä–∞")
parser.add_argument("--port", type=int, default=9999, help="UDP –ø–æ—Ä—Ç –ª–æ–≥-—Å–µ—Ä–≤–µ—Ä–∞")
parser.add_argument("--rate", type=int, default=50, help="–õ–æ–≥–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É")
parser.add_argument("--duration", type=int, default=60, help="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (—Å–µ–∫)")
parser.add_argument("--devices", type=int, default=5, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
args = parser.parse_args()

UDP_IP = args.ip
UDP_PORT = args.port
MESSAGES_PER_SECOND = args.rate
DURATION = args.duration
DEVICE_COUNT = args.devices

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MAC + –∏–º—ë–Ω
def generate_devices(n):
    devs = []
    for i in range(n):
        mac = ":".join(f"{random.randint(0,255):02x}" for _ in range(6))
        name = f"device-{i+1}"
        devs.append((mac, name))
    return devs

devices = generate_devices(DEVICE_COUNT)
levels = ["INFO", "WARNING", "ERR", "NOTICE"]

sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

def generate_log():
    mac, name = random.choice(devices)
    level = random.choice(levels)
    ip = f"192.168.8.{random.randint(2, 254)}"
    return f"<{random.randint(10, 190)}>Jul  5 22:15:49 OpenWrt dnsmasq-dhcp[1]: [{level}] DHCPACK(br-lan) {ip} {mac} {name}"

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
print(f"üì° –û—Ç–ø—Ä–∞–≤–∫–∞ {MESSAGES_PER_SECOND} –ª–æ–≥–æ–≤/—Å–µ–∫ –Ω–∞ {UDP_IP}:{UDP_PORT} –≤ —Ç–µ—á–µ–Ω–∏–µ {DURATION} —Å–µ–∫...")
end_time = time.time() + DURATION
while time.time() < end_time:
    for _ in range(MESSAGES_PER_SECOND):
        msg = generate_log().encode('utf-8')
        sock.sendto(msg, (UDP_IP, UDP_PORT))
    time.sleep(1)

print("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
